{"env_info": "sys.platform: linux\nPython: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-9.0-cudnn7.6.5\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.2-Product Build 20210312 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.3\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+298142e", "seed": 0, "exp_name": "fcn_unet_s8-d128-c48_512x1024_160k_cityscapes.py", "mmseg_version": "0.16.0+298142e", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained=None,\n    backbone=dict(\n        type='UNet',\n        in_channels=3,\n        base_channels=48,\n        num_stages=8,\n        strides=(1, 1, 1, 1, 1, 1, 1, 1),\n        enc_num_convs=(2, 2, 2, 2, 2, 2, 2, 2),\n        dec_num_convs=(2, 2, 2, 2, 2, 2, 2),\n        downsamples=(True, True, True, True, True, True, True),\n        enc_dilations=(1, 1, 1, 1, 1, 1, 1, 1),\n        dec_dilations=(1, 1, 1, 1, 1, 1, 1),\n        with_cp=False,\n        conv_cfg=None,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        act_cfg=dict(type='ReLU'),\n        upsample_cfg=dict(type='InterpConv'),\n        norm_eval=False),\n    decode_head=dict(\n        type='FCNHead',\n        in_channels=48,\n        in_index=7,\n        channels=64,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=96,\n        in_index=6,\n        channels=64,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/train',\n        ann_dir='gtFine/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=160000)\ncheckpoint_config = dict(by_epoch=False, interval=16000)\nevaluation = dict(interval=16000, metric='mIoU', pre_eval=True)\nwork_dir = './work_dirs/fcn_unet_s8-d128-c48_512x1024_160k_cityscapes'\ngpu_ids = range(0, 1)\nseed = 0\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.01, "memory": 25032, "data_time": 0.20434, "decode.loss_seg": 2.05436, "decode.acc_seg": 32.68099, "aux.loss_seg": 0.90173, "aux.acc_seg": 31.82452, "loss": 2.95609, "time": 0.97568}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00999, "memory": 25032, "data_time": 0.17742, "decode.loss_seg": 1.67736, "decode.acc_seg": 41.65371, "aux.loss_seg": 0.70067, "aux.acc_seg": 40.99601, "loss": 2.37803, "time": 0.92088}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00999, "memory": 25032, "data_time": 0.17763, "decode.loss_seg": 1.54928, "decode.acc_seg": 44.64256, "aux.loss_seg": 0.61912, "aux.acc_seg": 45.98717, "loss": 2.1684, "time": 0.79698}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00999, "memory": 25032, "data_time": 0.07187, "decode.loss_seg": 1.64361, "decode.acc_seg": 44.67376, "aux.loss_seg": 0.65238, "aux.acc_seg": 44.09208, "loss": 2.29599, "time": 0.6365}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00999, "memory": 25032, "data_time": 0.07873, "decode.loss_seg": 1.59035, "decode.acc_seg": 46.1635, "aux.loss_seg": 0.62072, "aux.acc_seg": 48.42795, "loss": 2.21107, "time": 0.69359}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00998, "memory": 25032, "data_time": 0.20103, "decode.loss_seg": 1.44046, "decode.acc_seg": 50.80975, "aux.loss_seg": 0.56959, "aux.acc_seg": 52.02197, "loss": 2.01004, "time": 0.91059}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00998, "memory": 25032, "data_time": 0.11901, "decode.loss_seg": 1.48109, "decode.acc_seg": 49.42859, "aux.loss_seg": 0.59352, "aux.acc_seg": 50.12295, "loss": 2.07461, "time": 0.81345}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00998, "memory": 25032, "data_time": 0.14637, "decode.loss_seg": 1.37959, "decode.acc_seg": 51.50871, "aux.loss_seg": 0.55182, "aux.acc_seg": 51.86994, "loss": 1.93141, "time": 0.75573}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00997, "memory": 25032, "data_time": 0.07027, "decode.loss_seg": 1.36303, "decode.acc_seg": 52.17311, "aux.loss_seg": 0.54224, "aux.acc_seg": 52.70456, "loss": 1.90527, "time": 0.67779}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00997, "memory": 25032, "data_time": 0.16196, "decode.loss_seg": 1.39098, "decode.acc_seg": 52.45523, "aux.loss_seg": 0.55145, "aux.acc_seg": 52.69722, "loss": 1.94243, "time": 0.822}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00997, "memory": 25032, "data_time": 0.12316, "decode.loss_seg": 1.32308, "decode.acc_seg": 54.37341, "aux.loss_seg": 0.51897, "aux.acc_seg": 55.59576, "loss": 1.84206, "time": 0.79012}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00997, "memory": 25032, "data_time": 0.34068, "decode.loss_seg": 1.34567, "decode.acc_seg": 53.83488, "aux.loss_seg": 0.53649, "aux.acc_seg": 53.89028, "loss": 1.88215, "time": 1.07569}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00996, "memory": 25032, "data_time": 0.21104, "decode.loss_seg": 1.37012, "decode.acc_seg": 52.17284, "aux.loss_seg": 0.54767, "aux.acc_seg": 52.5573, "loss": 1.9178, "time": 0.94708}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00996, "memory": 25032, "data_time": 0.13229, "decode.loss_seg": 1.3204, "decode.acc_seg": 53.25828, "aux.loss_seg": 0.53067, "aux.acc_seg": 53.41632, "loss": 1.85107, "time": 0.74525}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00996, "memory": 25032, "data_time": 0.15719, "decode.loss_seg": 1.35071, "decode.acc_seg": 53.53679, "aux.loss_seg": 0.54475, "aux.acc_seg": 53.56654, "loss": 1.89546, "time": 0.83331}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00996, "memory": 25032, "data_time": 0.04308, "decode.loss_seg": 1.39655, "decode.acc_seg": 52.43579, "aux.loss_seg": 0.55172, "aux.acc_seg": 53.53042, "loss": 1.94827, "time": 0.8138}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00995, "memory": 25032, "data_time": 0.29254, "decode.loss_seg": 1.34955, "decode.acc_seg": 55.77075, "aux.loss_seg": 0.53562, "aux.acc_seg": 56.29356, "loss": 1.88517, "time": 1.0295}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00995, "memory": 25032, "data_time": 0.05387, "decode.loss_seg": 1.32793, "decode.acc_seg": 55.47403, "aux.loss_seg": 0.52685, "aux.acc_seg": 56.11379, "loss": 1.85477, "time": 0.64389}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00995, "memory": 25032, "data_time": 0.25104, "decode.loss_seg": 1.26629, "decode.acc_seg": 57.33025, "aux.loss_seg": 0.50181, "aux.acc_seg": 57.75443, "loss": 1.76811, "time": 0.94268}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00994, "memory": 25032, "data_time": 0.2413, "decode.loss_seg": 1.21096, "decode.acc_seg": 58.92474, "aux.loss_seg": 0.48443, "aux.acc_seg": 59.47313, "loss": 1.69539, "time": 0.95989}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00994, "memory": 25032, "data_time": 0.05035, "decode.loss_seg": 1.1939, "decode.acc_seg": 57.43096, "aux.loss_seg": 0.4785, "aux.acc_seg": 58.16856, "loss": 1.6724, "time": 0.60714}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00994, "memory": 25032, "data_time": 0.38092, "decode.loss_seg": 1.09005, "decode.acc_seg": 60.92545, "aux.loss_seg": 0.43455, "aux.acc_seg": 61.46294, "loss": 1.5246, "time": 1.20521}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00994, "memory": 25032, "data_time": 0.12561, "decode.loss_seg": 1.19009, "decode.acc_seg": 57.64744, "aux.loss_seg": 0.4737, "aux.acc_seg": 57.94433, "loss": 1.66379, "time": 0.76484}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00993, "memory": 25032, "data_time": 0.07122, "decode.loss_seg": 1.16351, "decode.acc_seg": 55.58659, "aux.loss_seg": 0.46857, "aux.acc_seg": 56.46318, "loss": 1.63208, "time": 0.68481}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00993, "memory": 25032, "data_time": 0.12507, "decode.loss_seg": 1.19397, "decode.acc_seg": 58.57322, "aux.loss_seg": 0.47804, "aux.acc_seg": 58.61218, "loss": 1.67201, "time": 0.71896}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00993, "memory": 25032, "data_time": 0.06269, "decode.loss_seg": 1.1764, "decode.acc_seg": 57.69691, "aux.loss_seg": 0.4713, "aux.acc_seg": 58.14736, "loss": 1.6477, "time": 0.70892}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00992, "memory": 25032, "data_time": 0.03002, "decode.loss_seg": 1.13908, "decode.acc_seg": 59.43406, "aux.loss_seg": 0.45868, "aux.acc_seg": 59.69983, "loss": 1.59776, "time": 0.63058}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00992, "memory": 25032, "data_time": 0.32973, "decode.loss_seg": 1.298, "decode.acc_seg": 54.60865, "aux.loss_seg": 0.51947, "aux.acc_seg": 54.87528, "loss": 1.81747, "time": 1.22455}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00992, "memory": 25032, "data_time": 0.09659, "decode.loss_seg": 1.12579, "decode.acc_seg": 60.65043, "aux.loss_seg": 0.44902, "aux.acc_seg": 61.2872, "loss": 1.57481, "time": 0.65004}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00992, "memory": 25032, "data_time": 0.26372, "decode.loss_seg": 1.12153, "decode.acc_seg": 60.37064, "aux.loss_seg": 0.43606, "aux.acc_seg": 61.08343, "loss": 1.55759, "time": 1.03247}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.00991, "memory": 25032, "data_time": 0.01373, "decode.loss_seg": 1.16202, "decode.acc_seg": 56.68547, "aux.loss_seg": 0.45696, "aux.acc_seg": 57.78229, "loss": 1.61898, "time": 0.61524}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.00991, "memory": 25032, "data_time": 0.0734, "decode.loss_seg": 1.20304, "decode.acc_seg": 58.27997, "aux.loss_seg": 0.47602, "aux.acc_seg": 58.79418, "loss": 1.67906, "time": 0.62204}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.00991, "memory": 25032, "data_time": 0.15275, "decode.loss_seg": 1.11808, "decode.acc_seg": 62.86533, "aux.loss_seg": 0.44628, "aux.acc_seg": 63.09254, "loss": 1.56436, "time": 0.81707}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.00991, "memory": 25032, "data_time": 0.04882, "decode.loss_seg": 1.06873, "decode.acc_seg": 60.47884, "aux.loss_seg": 0.42412, "aux.acc_seg": 61.14127, "loss": 1.49285, "time": 0.67358}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.0099, "memory": 25032, "data_time": 0.17065, "decode.loss_seg": 1.08738, "decode.acc_seg": 59.97935, "aux.loss_seg": 0.43513, "aux.acc_seg": 60.05204, "loss": 1.52251, "time": 0.84002}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.0099, "memory": 25032, "data_time": 0.12128, "decode.loss_seg": 1.1714, "decode.acc_seg": 59.84067, "aux.loss_seg": 0.46108, "aux.acc_seg": 60.93431, "loss": 1.63248, "time": 0.78461}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.0099, "memory": 25032, "data_time": 0.23776, "decode.loss_seg": 1.12599, "decode.acc_seg": 61.62583, "aux.loss_seg": 0.44735, "aux.acc_seg": 62.62944, "loss": 1.57334, "time": 0.96285}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.00989, "memory": 25032, "data_time": 0.09223, "decode.loss_seg": 1.09751, "decode.acc_seg": 60.07447, "aux.loss_seg": 0.435, "aux.acc_seg": 60.47365, "loss": 1.53251, "time": 0.6775}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.00989, "memory": 25032, "data_time": 0.13796, "decode.loss_seg": 1.13123, "decode.acc_seg": 61.33549, "aux.loss_seg": 0.44221, "aux.acc_seg": 62.59881, "loss": 1.57344, "time": 0.87706}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.00989, "memory": 25032, "data_time": 0.3769, "decode.loss_seg": 1.09899, "decode.acc_seg": 61.43669, "aux.loss_seg": 0.4431, "aux.acc_seg": 61.91525, "loss": 1.54209, "time": 1.17649}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.00989, "memory": 25032, "data_time": 0.01443, "decode.loss_seg": 1.10516, "decode.acc_seg": 61.33179, "aux.loss_seg": 0.44084, "aux.acc_seg": 61.91785, "loss": 1.546, "time": 0.57594}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.00988, "memory": 25032, "data_time": 0.09363, "decode.loss_seg": 1.05877, "decode.acc_seg": 60.75769, "aux.loss_seg": 0.41758, "aux.acc_seg": 61.32425, "loss": 1.47635, "time": 0.8274}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.00988, "memory": 25032, "data_time": 0.21988, "decode.loss_seg": 1.12486, "decode.acc_seg": 60.7928, "aux.loss_seg": 0.45613, "aux.acc_seg": 60.84664, "loss": 1.58099, "time": 0.94356}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.00988, "memory": 25032, "data_time": 0.18054, "decode.loss_seg": 1.16538, "decode.acc_seg": 59.7753, "aux.loss_seg": 0.45963, "aux.acc_seg": 60.3997, "loss": 1.62501, "time": 0.77518}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.00987, "memory": 25032, "data_time": 0.12281, "decode.loss_seg": 1.17117, "decode.acc_seg": 58.48906, "aux.loss_seg": 0.46289, "aux.acc_seg": 59.23716, "loss": 1.63407, "time": 0.76525}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.00987, "memory": 25032, "data_time": 0.33179, "decode.loss_seg": 1.00101, "decode.acc_seg": 63.63589, "aux.loss_seg": 0.39856, "aux.acc_seg": 63.65013, "loss": 1.39957, "time": 1.06047}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.00987, "memory": 25032, "data_time": 0.02099, "decode.loss_seg": 1.06531, "decode.acc_seg": 61.63163, "aux.loss_seg": 0.41816, "aux.acc_seg": 62.09033, "loss": 1.48347, "time": 0.67124}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.00987, "memory": 25032, "data_time": 0.19666, "decode.loss_seg": 1.05898, "decode.acc_seg": 61.89692, "aux.loss_seg": 0.41895, "aux.acc_seg": 62.71766, "loss": 1.47793, "time": 0.95681}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.00986, "memory": 25032, "data_time": 0.12433, "decode.loss_seg": 1.02153, "decode.acc_seg": 63.91817, "aux.loss_seg": 0.40506, "aux.acc_seg": 63.97831, "loss": 1.42659, "time": 0.70403}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.00986, "memory": 25032, "data_time": 0.16813, "decode.loss_seg": 1.14602, "decode.acc_seg": 58.31466, "aux.loss_seg": 0.45377, "aux.acc_seg": 59.06452, "loss": 1.59979, "time": 0.80716}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.00986, "memory": 25032, "data_time": 0.01427, "decode.loss_seg": 1.02586, "decode.acc_seg": 62.17474, "aux.loss_seg": 0.40508, "aux.acc_seg": 63.07889, "loss": 1.43094, "time": 0.58955}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.00986, "memory": 25032, "data_time": 0.04159, "decode.loss_seg": 1.03884, "decode.acc_seg": 62.24623, "aux.loss_seg": 0.41109, "aux.acc_seg": 62.74842, "loss": 1.44993, "time": 0.58428}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.00985, "memory": 25032, "data_time": 0.11225, "decode.loss_seg": 1.0393, "decode.acc_seg": 62.84681, "aux.loss_seg": 0.41191, "aux.acc_seg": 63.47161, "loss": 1.45121, "time": 0.7136}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.00985, "memory": 25032, "data_time": 0.13766, "decode.loss_seg": 1.09807, "decode.acc_seg": 62.45239, "aux.loss_seg": 0.43241, "aux.acc_seg": 63.06754, "loss": 1.53048, "time": 0.82445}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.00985, "memory": 25032, "data_time": 0.0806, "decode.loss_seg": 1.08924, "decode.acc_seg": 60.47021, "aux.loss_seg": 0.4283, "aux.acc_seg": 61.17855, "loss": 1.51754, "time": 0.74296}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 0.00984, "memory": 25032, "data_time": 0.12315, "decode.loss_seg": 0.9686, "decode.acc_seg": 64.98204, "aux.loss_seg": 0.38718, "aux.acc_seg": 64.98193, "loss": 1.35578, "time": 0.85613}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 0.00984, "memory": 25032, "data_time": 0.35146, "decode.loss_seg": 1.00512, "decode.acc_seg": 62.74741, "aux.loss_seg": 0.39639, "aux.acc_seg": 63.63743, "loss": 1.40152, "time": 1.04933}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 0.00984, "memory": 25032, "data_time": 0.0928, "decode.loss_seg": 1.02804, "decode.acc_seg": 63.47108, "aux.loss_seg": 0.40644, "aux.acc_seg": 63.94704, "loss": 1.43448, "time": 0.72456}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 0.00984, "memory": 25032, "data_time": 0.16828, "decode.loss_seg": 0.9887, "decode.acc_seg": 64.14754, "aux.loss_seg": 0.39498, "aux.acc_seg": 64.42886, "loss": 1.38369, "time": 0.77445}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.00983, "memory": 25032, "data_time": 0.12351, "decode.loss_seg": 1.08633, "decode.acc_seg": 63.21353, "aux.loss_seg": 0.43038, "aux.acc_seg": 63.58154, "loss": 1.51671, "time": 0.72738}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 0.00983, "memory": 25032, "data_time": 0.08602, "decode.loss_seg": 1.0362, "decode.acc_seg": 63.07013, "aux.loss_seg": 0.41299, "aux.acc_seg": 63.62358, "loss": 1.44919, "time": 0.6544}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 0.00983, "memory": 25032, "data_time": 0.29516, "decode.loss_seg": 1.07111, "decode.acc_seg": 64.60609, "aux.loss_seg": 0.42192, "aux.acc_seg": 65.48771, "loss": 1.49303, "time": 1.06253}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 0.00982, "memory": 25032, "data_time": 0.1223, "decode.loss_seg": 0.88946, "decode.acc_seg": 68.07175, "aux.loss_seg": 0.35096, "aux.acc_seg": 68.63679, "loss": 1.24042, "time": 0.89171}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 0.00982, "memory": 25032, "data_time": 0.15181, "decode.loss_seg": 0.97089, "decode.acc_seg": 65.61957, "aux.loss_seg": 0.38534, "aux.acc_seg": 65.95249, "loss": 1.35622, "time": 0.92594}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 0.00982, "memory": 25032, "data_time": 0.07575, "decode.loss_seg": 0.89777, "decode.acc_seg": 68.22503, "aux.loss_seg": 0.35804, "aux.acc_seg": 68.57859, "loss": 1.25581, "time": 0.65277}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 0.00982, "memory": 25032, "data_time": 0.16422, "decode.loss_seg": 0.98653, "decode.acc_seg": 66.65808, "aux.loss_seg": 0.3864, "aux.acc_seg": 67.36074, "loss": 1.37293, "time": 0.85958}
{"mode": "train", "epoch": 3, "iter": 3350, "lr": 0.00981, "memory": 25032, "data_time": 0.20983, "decode.loss_seg": 0.94403, "decode.acc_seg": 66.73011, "aux.loss_seg": 0.37176, "aux.acc_seg": 67.27766, "loss": 1.31579, "time": 0.79539}
{"mode": "train", "epoch": 3, "iter": 3400, "lr": 0.00981, "memory": 25032, "data_time": 0.02792, "decode.loss_seg": 0.96676, "decode.acc_seg": 65.78218, "aux.loss_seg": 0.38215, "aux.acc_seg": 66.19115, "loss": 1.34891, "time": 0.62706}
{"mode": "train", "epoch": 3, "iter": 3450, "lr": 0.00981, "memory": 25032, "data_time": 0.12731, "decode.loss_seg": 0.97392, "decode.acc_seg": 64.35308, "aux.loss_seg": 0.38039, "aux.acc_seg": 65.14223, "loss": 1.35431, "time": 0.70472}
{"mode": "train", "epoch": 3, "iter": 3500, "lr": 0.0098, "memory": 25032, "data_time": 0.32112, "decode.loss_seg": 1.10983, "decode.acc_seg": 61.82098, "aux.loss_seg": 0.43969, "aux.acc_seg": 62.15998, "loss": 1.54952, "time": 0.98231}
{"mode": "train", "epoch": 3, "iter": 3550, "lr": 0.0098, "memory": 25032, "data_time": 0.11139, "decode.loss_seg": 1.03898, "decode.acc_seg": 63.27841, "aux.loss_seg": 0.41704, "aux.acc_seg": 63.25104, "loss": 1.45602, "time": 0.69374}
{"mode": "train", "epoch": 3, "iter": 3600, "lr": 0.0098, "memory": 25032, "data_time": 0.09792, "decode.loss_seg": 0.92009, "decode.acc_seg": 66.70856, "aux.loss_seg": 0.36305, "aux.acc_seg": 67.31365, "loss": 1.28314, "time": 0.78547}
{"mode": "train", "epoch": 3, "iter": 3650, "lr": 0.0098, "memory": 25032, "data_time": 0.21293, "decode.loss_seg": 0.93635, "decode.acc_seg": 67.55995, "aux.loss_seg": 0.37125, "aux.acc_seg": 67.81899, "loss": 1.3076, "time": 0.92058}
{"mode": "train", "epoch": 3, "iter": 3700, "lr": 0.00979, "memory": 25032, "data_time": 0.01489, "decode.loss_seg": 1.01913, "decode.acc_seg": 63.22683, "aux.loss_seg": 0.39922, "aux.acc_seg": 64.27317, "loss": 1.41834, "time": 0.64001}
{"mode": "train", "epoch": 3, "iter": 3750, "lr": 0.00979, "memory": 25032, "data_time": 0.15408, "decode.loss_seg": 1.05876, "decode.acc_seg": 62.10043, "aux.loss_seg": 0.41502, "aux.acc_seg": 62.71023, "loss": 1.47378, "time": 0.85878}
{"mode": "train", "epoch": 3, "iter": 3800, "lr": 0.00979, "memory": 25032, "data_time": 0.40834, "decode.loss_seg": 1.0335, "decode.acc_seg": 61.40798, "aux.loss_seg": 0.4076, "aux.acc_seg": 61.98892, "loss": 1.44109, "time": 1.13143}
{"mode": "train", "epoch": 3, "iter": 3850, "lr": 0.00979, "memory": 25032, "data_time": 0.01729, "decode.loss_seg": 0.90956, "decode.acc_seg": 69.06791, "aux.loss_seg": 0.36179, "aux.acc_seg": 69.40485, "loss": 1.27135, "time": 0.56541}
{"mode": "train", "epoch": 3, "iter": 3900, "lr": 0.00978, "memory": 25032, "data_time": 0.03955, "decode.loss_seg": 0.84861, "decode.acc_seg": 68.09902, "aux.loss_seg": 0.33702, "aux.acc_seg": 68.28551, "loss": 1.18562, "time": 0.62242}
{"mode": "train", "epoch": 3, "iter": 3950, "lr": 0.00978, "memory": 25032, "data_time": 0.15041, "decode.loss_seg": 1.05608, "decode.acc_seg": 62.79528, "aux.loss_seg": 0.41658, "aux.acc_seg": 63.00199, "loss": 1.47266, "time": 0.95527}
{"mode": "train", "epoch": 3, "iter": 4000, "lr": 0.00978, "memory": 25032, "data_time": 0.1675, "decode.loss_seg": 1.03309, "decode.acc_seg": 62.02795, "aux.loss_seg": 0.41047, "aux.acc_seg": 62.42936, "loss": 1.44356, "time": 0.92158}
{"mode": "train", "epoch": 3, "iter": 4050, "lr": 0.00977, "memory": 25032, "data_time": 0.06167, "decode.loss_seg": 1.05017, "decode.acc_seg": 64.07748, "aux.loss_seg": 0.41877, "aux.acc_seg": 64.37954, "loss": 1.46894, "time": 0.60142}
{"mode": "train", "epoch": 3, "iter": 4100, "lr": 0.00977, "memory": 25032, "data_time": 0.1563, "decode.loss_seg": 1.08186, "decode.acc_seg": 59.2091, "aux.loss_seg": 0.42657, "aux.acc_seg": 59.85208, "loss": 1.50843, "time": 0.77544}
{"mode": "train", "epoch": 3, "iter": 4150, "lr": 0.00977, "memory": 25032, "data_time": 0.28015, "decode.loss_seg": 0.93825, "decode.acc_seg": 66.10134, "aux.loss_seg": 0.37112, "aux.acc_seg": 66.41599, "loss": 1.30937, "time": 0.99222}
{"mode": "train", "epoch": 3, "iter": 4200, "lr": 0.00977, "memory": 25032, "data_time": 0.16731, "decode.loss_seg": 0.97097, "decode.acc_seg": 65.61821, "aux.loss_seg": 0.38956, "aux.acc_seg": 65.67874, "loss": 1.36053, "time": 0.81755}
{"mode": "train", "epoch": 3, "iter": 4250, "lr": 0.00976, "memory": 25032, "data_time": 0.20939, "decode.loss_seg": 0.90535, "decode.acc_seg": 66.90356, "aux.loss_seg": 0.35915, "aux.acc_seg": 67.65964, "loss": 1.26451, "time": 0.96354}
{"mode": "train", "epoch": 3, "iter": 4300, "lr": 0.00976, "memory": 25032, "data_time": 0.14385, "decode.loss_seg": 0.94707, "decode.acc_seg": 64.91899, "aux.loss_seg": 0.36817, "aux.acc_seg": 66.16423, "loss": 1.31523, "time": 0.87667}
{"mode": "train", "epoch": 3, "iter": 4350, "lr": 0.00976, "memory": 25032, "data_time": 0.0157, "decode.loss_seg": 0.88965, "decode.acc_seg": 67.29362, "aux.loss_seg": 0.35834, "aux.acc_seg": 67.5161, "loss": 1.24799, "time": 0.61794}
{"mode": "train", "epoch": 3, "iter": 4400, "lr": 0.00975, "memory": 25032, "data_time": 0.03124, "decode.loss_seg": 0.98852, "decode.acc_seg": 64.92585, "aux.loss_seg": 0.39924, "aux.acc_seg": 64.94673, "loss": 1.38777, "time": 0.66092}
{"mode": "train", "epoch": 3, "iter": 4450, "lr": 0.00975, "memory": 25032, "data_time": 0.20412, "decode.loss_seg": 1.07862, "decode.acc_seg": 63.80323, "aux.loss_seg": 0.4281, "aux.acc_seg": 64.3912, "loss": 1.50673, "time": 0.95253}
{"mode": "train", "epoch": 4, "iter": 4500, "lr": 0.00975, "memory": 25032, "data_time": 0.13241, "decode.loss_seg": 0.93713, "decode.acc_seg": 68.59946, "aux.loss_seg": 0.37471, "aux.acc_seg": 68.70114, "loss": 1.31184, "time": 0.74641}
{"mode": "train", "epoch": 4, "iter": 4550, "lr": 0.00975, "memory": 25032, "data_time": 0.19044, "decode.loss_seg": 0.96473, "decode.acc_seg": 67.98385, "aux.loss_seg": 0.38453, "aux.acc_seg": 68.08789, "loss": 1.34926, "time": 0.96453}
{"mode": "train", "epoch": 4, "iter": 4600, "lr": 0.00974, "memory": 25032, "data_time": 0.31601, "decode.loss_seg": 0.88023, "decode.acc_seg": 67.20301, "aux.loss_seg": 0.35033, "aux.acc_seg": 67.59182, "loss": 1.23056, "time": 1.08885}
{"mode": "train", "epoch": 4, "iter": 4650, "lr": 0.00974, "memory": 25032, "data_time": 0.0311, "decode.loss_seg": 0.89054, "decode.acc_seg": 68.05515, "aux.loss_seg": 0.35298, "aux.acc_seg": 68.46346, "loss": 1.24351, "time": 0.66651}
{"mode": "train", "epoch": 4, "iter": 4700, "lr": 0.00974, "memory": 25032, "data_time": 0.15164, "decode.loss_seg": 1.0484, "decode.acc_seg": 64.46576, "aux.loss_seg": 0.42046, "aux.acc_seg": 64.68635, "loss": 1.46886, "time": 0.78068}
{"mode": "train", "epoch": 4, "iter": 4750, "lr": 0.00974, "memory": 25032, "data_time": 0.16487, "decode.loss_seg": 0.917, "decode.acc_seg": 67.96977, "aux.loss_seg": 0.36412, "aux.acc_seg": 68.48923, "loss": 1.28111, "time": 0.89784}
{"mode": "train", "epoch": 4, "iter": 4800, "lr": 0.00973, "memory": 25032, "data_time": 0.19729, "decode.loss_seg": 0.94429, "decode.acc_seg": 64.87983, "aux.loss_seg": 0.37346, "aux.acc_seg": 65.48537, "loss": 1.31775, "time": 0.811}
{"mode": "train", "epoch": 4, "iter": 4850, "lr": 0.00973, "memory": 25032, "data_time": 0.09907, "decode.loss_seg": 0.92519, "decode.acc_seg": 68.09241, "aux.loss_seg": 0.37072, "aux.acc_seg": 67.98964, "loss": 1.29591, "time": 0.70639}
{"mode": "train", "epoch": 4, "iter": 4900, "lr": 0.00973, "memory": 25032, "data_time": 0.2253, "decode.loss_seg": 0.98297, "decode.acc_seg": 66.32775, "aux.loss_seg": 0.39418, "aux.acc_seg": 66.24592, "loss": 1.37715, "time": 0.95278}
{"mode": "train", "epoch": 4, "iter": 4950, "lr": 0.00972, "memory": 25032, "data_time": 0.19103, "decode.loss_seg": 0.89326, "decode.acc_seg": 67.78916, "aux.loss_seg": 0.35655, "aux.acc_seg": 68.45699, "loss": 1.24982, "time": 0.96196}
{"mode": "train", "epoch": 4, "iter": 5000, "lr": 0.00972, "memory": 25032, "data_time": 0.03756, "decode.loss_seg": 0.87188, "decode.acc_seg": 69.3952, "aux.loss_seg": 0.34684, "aux.acc_seg": 69.78647, "loss": 1.21872, "time": 0.60858}

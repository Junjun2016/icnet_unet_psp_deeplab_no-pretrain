{"env_info": "sys.platform: linux\nPython: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-SXM2-32GB\nCUDA_HOME: /mnt/cache/share/polaris/dep/cuda-9.0-cudnn7.6.5\nGCC: gcc (GCC) 5.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.2-Product Build 20210312 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.5.3\nMMCV: 1.3.8\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMSegmentation: 0.16.0+298142e", "seed": 0, "exp_name": "fcn_unet_s8-d128-c32_enc-dilation-22222222_dec-dilation-2222222_512x1024_160k_cityscapes.py", "mmseg_version": "0.16.0+298142e", "config": "norm_cfg = dict(type='SyncBN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained=None,\n    backbone=dict(\n        type='UNet',\n        in_channels=3,\n        base_channels=32,\n        num_stages=8,\n        strides=(1, 1, 1, 1, 1, 1, 1, 1),\n        enc_num_convs=(2, 2, 2, 2, 2, 2, 2, 2),\n        dec_num_convs=(2, 2, 2, 2, 2, 2, 2),\n        downsamples=(True, True, True, True, True, True, True),\n        enc_dilations=(2, 2, 2, 2, 2, 2, 2, 2),\n        dec_dilations=(2, 2, 2, 2, 2, 2, 2),\n        with_cp=False,\n        conv_cfg=None,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        act_cfg=dict(type='ReLU'),\n        upsample_cfg=dict(type='InterpConv'),\n        norm_eval=False),\n    decode_head=dict(\n        type='FCNHead',\n        in_channels=32,\n        in_index=7,\n        channels=64,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=dict(\n        type='FCNHead',\n        in_channels=64,\n        in_index=6,\n        channels=64,\n        num_convs=1,\n        concat_input=False,\n        dropout_ratio=0.1,\n        num_classes=19,\n        norm_cfg=dict(type='SyncBN', requires_grad=True),\n        align_corners=False,\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.4)),\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(2048, 1024),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/train',\n        ann_dir='gtFine/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(\n                type='Resize', img_scale=(2048, 1024), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(2048, 1024),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(type='SGD', lr=0.01, momentum=0.9, weight_decay=0.0005)\noptimizer_config = dict()\nlr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)\nrunner = dict(type='IterBasedRunner', max_iters=160000)\ncheckpoint_config = dict(by_epoch=False, interval=16000)\nevaluation = dict(interval=16000, metric='mIoU', pre_eval=True)\nwork_dir = './work_dirs/fcn_unet_s8-d128-c32_enc-dilation-22222222_dec-dilation-2222222_512x1024_160k_cityscapes'\ngpu_ids = range(0, 1)\nseed = 0\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.01, "memory": 25203, "data_time": 0.24936, "decode.loss_seg": 2.03726, "decode.acc_seg": 33.12462, "aux.loss_seg": 0.89813, "aux.acc_seg": 31.13639, "loss": 2.93538, "time": 1.07688}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00999, "memory": 25203, "data_time": 0.04135, "decode.loss_seg": 1.67923, "decode.acc_seg": 40.98944, "aux.loss_seg": 0.70567, "aux.acc_seg": 40.6448, "loss": 2.38491, "time": 0.37731}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00999, "memory": 25203, "data_time": 0.05865, "decode.loss_seg": 1.53692, "decode.acc_seg": 43.94665, "aux.loss_seg": 0.62009, "aux.acc_seg": 45.61052, "loss": 2.15701, "time": 0.45669}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00999, "memory": 25203, "data_time": 0.3358, "decode.loss_seg": 1.64529, "decode.acc_seg": 42.81239, "aux.loss_seg": 0.65305, "aux.acc_seg": 44.15634, "loss": 2.29834, "time": 0.92218}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00999, "memory": 25203, "data_time": 0.23103, "decode.loss_seg": 1.57079, "decode.acc_seg": 48.20289, "aux.loss_seg": 0.6127, "aux.acc_seg": 49.17606, "loss": 2.18349, "time": 0.64998}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.00998, "memory": 25203, "data_time": 0.02322, "decode.loss_seg": 1.4291, "decode.acc_seg": 51.82787, "aux.loss_seg": 0.56356, "aux.acc_seg": 52.40478, "loss": 1.99266, "time": 0.40567}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 0.00998, "memory": 25203, "data_time": 0.07012, "decode.loss_seg": 1.4577, "decode.acc_seg": 50.17532, "aux.loss_seg": 0.57493, "aux.acc_seg": 51.66098, "loss": 2.03264, "time": 0.5625}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 0.00998, "memory": 25203, "data_time": 0.14264, "decode.loss_seg": 1.34469, "decode.acc_seg": 54.34227, "aux.loss_seg": 0.53276, "aux.acc_seg": 55.01788, "loss": 1.87745, "time": 0.62693}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 0.00997, "memory": 25203, "data_time": 0.37316, "decode.loss_seg": 1.34286, "decode.acc_seg": 53.63198, "aux.loss_seg": 0.53322, "aux.acc_seg": 54.37901, "loss": 1.87609, "time": 0.93907}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.00997, "memory": 25203, "data_time": 0.1459, "decode.loss_seg": 1.35063, "decode.acc_seg": 54.13674, "aux.loss_seg": 0.53919, "aux.acc_seg": 55.15976, "loss": 1.88982, "time": 0.61181}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.00997, "memory": 25203, "data_time": 0.09458, "decode.loss_seg": 1.27112, "decode.acc_seg": 56.33073, "aux.loss_seg": 0.50473, "aux.acc_seg": 56.69266, "loss": 1.77585, "time": 0.53468}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.00997, "memory": 25203, "data_time": 0.13367, "decode.loss_seg": 1.32266, "decode.acc_seg": 54.14433, "aux.loss_seg": 0.52015, "aux.acc_seg": 54.96578, "loss": 1.84281, "time": 0.63816}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.00996, "memory": 25203, "data_time": 0.09797, "decode.loss_seg": 1.33493, "decode.acc_seg": 52.56089, "aux.loss_seg": 0.53379, "aux.acc_seg": 52.64747, "loss": 1.86872, "time": 0.70379}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.00996, "memory": 25203, "data_time": 0.05703, "decode.loss_seg": 1.29961, "decode.acc_seg": 55.12029, "aux.loss_seg": 0.51899, "aux.acc_seg": 54.90902, "loss": 1.8186, "time": 0.46499}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.00996, "memory": 25203, "data_time": 0.01043, "decode.loss_seg": 1.34891, "decode.acc_seg": 53.25272, "aux.loss_seg": 0.53873, "aux.acc_seg": 54.46566, "loss": 1.88764, "time": 0.52636}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.00996, "memory": 25203, "data_time": 0.05511, "decode.loss_seg": 1.33658, "decode.acc_seg": 55.04235, "aux.loss_seg": 0.53038, "aux.acc_seg": 55.51598, "loss": 1.86696, "time": 0.43008}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.00995, "memory": 25203, "data_time": 0.10917, "decode.loss_seg": 1.30314, "decode.acc_seg": 57.05886, "aux.loss_seg": 0.51537, "aux.acc_seg": 57.64923, "loss": 1.81851, "time": 0.62118}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.00995, "memory": 25203, "data_time": 0.05827, "decode.loss_seg": 1.32682, "decode.acc_seg": 55.27273, "aux.loss_seg": 0.5294, "aux.acc_seg": 55.3223, "loss": 1.85622, "time": 0.49555}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.00995, "memory": 25203, "data_time": 0.12678, "decode.loss_seg": 1.21122, "decode.acc_seg": 59.41847, "aux.loss_seg": 0.48219, "aux.acc_seg": 59.86275, "loss": 1.69341, "time": 0.58216}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.00994, "memory": 25203, "data_time": 0.19176, "decode.loss_seg": 1.14948, "decode.acc_seg": 60.93294, "aux.loss_seg": 0.46207, "aux.acc_seg": 61.78483, "loss": 1.61155, "time": 0.5873}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.00994, "memory": 25203, "data_time": 0.01854, "decode.loss_seg": 1.14636, "decode.acc_seg": 58.88064, "aux.loss_seg": 0.45785, "aux.acc_seg": 60.01539, "loss": 1.60421, "time": 0.43158}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.00994, "memory": 25203, "data_time": 0.05051, "decode.loss_seg": 1.10089, "decode.acc_seg": 61.12541, "aux.loss_seg": 0.43247, "aux.acc_seg": 62.61492, "loss": 1.53336, "time": 0.47612}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.00994, "memory": 25203, "data_time": 0.13272, "decode.loss_seg": 1.19237, "decode.acc_seg": 57.28311, "aux.loss_seg": 0.47361, "aux.acc_seg": 58.54243, "loss": 1.66599, "time": 0.63372}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.00993, "memory": 25203, "data_time": 0.04091, "decode.loss_seg": 1.13675, "decode.acc_seg": 57.586, "aux.loss_seg": 0.44777, "aux.acc_seg": 58.933, "loss": 1.58452, "time": 0.48221}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.00993, "memory": 25203, "data_time": 0.03009, "decode.loss_seg": 1.15427, "decode.acc_seg": 59.59117, "aux.loss_seg": 0.46047, "aux.acc_seg": 60.2461, "loss": 1.61473, "time": 0.41956}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.00993, "memory": 25203, "data_time": 0.18214, "decode.loss_seg": 1.15302, "decode.acc_seg": 58.67538, "aux.loss_seg": 0.4612, "aux.acc_seg": 58.87653, "loss": 1.61421, "time": 0.6601}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.00992, "memory": 25203, "data_time": 0.01347, "decode.loss_seg": 1.15641, "decode.acc_seg": 59.41797, "aux.loss_seg": 0.45761, "aux.acc_seg": 60.2746, "loss": 1.61402, "time": 0.53531}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.00992, "memory": 25203, "data_time": 0.11389, "decode.loss_seg": 1.46356, "decode.acc_seg": 49.21564, "aux.loss_seg": 0.57611, "aux.acc_seg": 50.1361, "loss": 2.03967, "time": 0.60663}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.00992, "memory": 25203, "data_time": 0.11531, "decode.loss_seg": 1.2813, "decode.acc_seg": 55.96941, "aux.loss_seg": 0.50836, "aux.acc_seg": 56.93581, "loss": 1.78966, "time": 0.49949}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 0.00992, "memory": 25203, "data_time": 0.3104, "decode.loss_seg": 1.12926, "decode.acc_seg": 60.11559, "aux.loss_seg": 0.45177, "aux.acc_seg": 60.36789, "loss": 1.58103, "time": 0.9031}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 0.00991, "memory": 25203, "data_time": 0.02292, "decode.loss_seg": 1.14181, "decode.acc_seg": 58.05287, "aux.loss_seg": 0.45431, "aux.acc_seg": 58.66268, "loss": 1.59613, "time": 0.4845}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 0.00991, "memory": 25203, "data_time": 0.08671, "decode.loss_seg": 1.20064, "decode.acc_seg": 57.30345, "aux.loss_seg": 0.48186, "aux.acc_seg": 58.44257, "loss": 1.6825, "time": 0.55308}
{"mode": "train", "epoch": 2, "iter": 1650, "lr": 0.00991, "memory": 25203, "data_time": 0.47501, "decode.loss_seg": 1.14648, "decode.acc_seg": 61.78292, "aux.loss_seg": 0.46182, "aux.acc_seg": 61.99207, "loss": 1.6083, "time": 1.1035}
{"mode": "train", "epoch": 2, "iter": 1700, "lr": 0.00991, "memory": 25203, "data_time": 0.08001, "decode.loss_seg": 1.0713, "decode.acc_seg": 60.17873, "aux.loss_seg": 0.42389, "aux.acc_seg": 61.20295, "loss": 1.49519, "time": 0.46464}
{"mode": "train", "epoch": 2, "iter": 1750, "lr": 0.0099, "memory": 25203, "data_time": 0.01606, "decode.loss_seg": 1.10624, "decode.acc_seg": 59.0693, "aux.loss_seg": 0.43839, "aux.acc_seg": 59.52941, "loss": 1.54463, "time": 0.39304}
{"mode": "train", "epoch": 2, "iter": 1800, "lr": 0.0099, "memory": 25203, "data_time": 0.13695, "decode.loss_seg": 1.15933, "decode.acc_seg": 60.01042, "aux.loss_seg": 0.46339, "aux.acc_seg": 60.3036, "loss": 1.62272, "time": 0.65213}
{"mode": "train", "epoch": 2, "iter": 1850, "lr": 0.0099, "memory": 25203, "data_time": 0.10419, "decode.loss_seg": 1.11751, "decode.acc_seg": 62.28263, "aux.loss_seg": 0.44073, "aux.acc_seg": 63.52116, "loss": 1.55824, "time": 0.45053}
{"mode": "train", "epoch": 2, "iter": 1900, "lr": 0.00989, "memory": 25203, "data_time": 0.08833, "decode.loss_seg": 1.12789, "decode.acc_seg": 58.9673, "aux.loss_seg": 0.45024, "aux.acc_seg": 59.76146, "loss": 1.57814, "time": 0.61414}
{"mode": "train", "epoch": 2, "iter": 1950, "lr": 0.00989, "memory": 25203, "data_time": 0.1218, "decode.loss_seg": 1.18498, "decode.acc_seg": 60.63969, "aux.loss_seg": 0.4567, "aux.acc_seg": 61.55772, "loss": 1.64169, "time": 0.43903}
{"mode": "train", "epoch": 2, "iter": 2000, "lr": 0.00989, "memory": 25203, "data_time": 0.03837, "decode.loss_seg": 1.09999, "decode.acc_seg": 61.82952, "aux.loss_seg": 0.43204, "aux.acc_seg": 63.14207, "loss": 1.53203, "time": 0.46601}
{"mode": "train", "epoch": 2, "iter": 2050, "lr": 0.00989, "memory": 25203, "data_time": 0.11038, "decode.loss_seg": 1.11045, "decode.acc_seg": 61.38562, "aux.loss_seg": 0.4417, "aux.acc_seg": 62.39305, "loss": 1.55215, "time": 0.53182}
{"mode": "train", "epoch": 2, "iter": 2100, "lr": 0.00988, "memory": 25203, "data_time": 0.16112, "decode.loss_seg": 1.05681, "decode.acc_seg": 61.49802, "aux.loss_seg": 0.41652, "aux.acc_seg": 62.0103, "loss": 1.47332, "time": 0.47835}
{"mode": "train", "epoch": 2, "iter": 2150, "lr": 0.00988, "memory": 25203, "data_time": 0.18568, "decode.loss_seg": 1.11333, "decode.acc_seg": 61.35448, "aux.loss_seg": 0.44791, "aux.acc_seg": 62.04374, "loss": 1.56124, "time": 0.6367}
{"mode": "train", "epoch": 2, "iter": 2200, "lr": 0.00988, "memory": 25203, "data_time": 0.01392, "decode.loss_seg": 1.19138, "decode.acc_seg": 59.14244, "aux.loss_seg": 0.47706, "aux.acc_seg": 59.05791, "loss": 1.66844, "time": 0.50663}
{"mode": "train", "epoch": 2, "iter": 2250, "lr": 0.00987, "memory": 25203, "data_time": 0.02051, "decode.loss_seg": 1.23155, "decode.acc_seg": 55.52558, "aux.loss_seg": 0.48586, "aux.acc_seg": 56.87395, "loss": 1.71741, "time": 0.49612}
{"mode": "train", "epoch": 2, "iter": 2300, "lr": 0.00987, "memory": 25203, "data_time": 0.09617, "decode.loss_seg": 1.02194, "decode.acc_seg": 62.70168, "aux.loss_seg": 0.39781, "aux.acc_seg": 63.02384, "loss": 1.41975, "time": 0.4663}
{"mode": "train", "epoch": 2, "iter": 2350, "lr": 0.00987, "memory": 25203, "data_time": 0.11272, "decode.loss_seg": 1.06261, "decode.acc_seg": 61.49565, "aux.loss_seg": 0.41822, "aux.acc_seg": 62.00925, "loss": 1.48082, "time": 0.66719}
{"mode": "train", "epoch": 2, "iter": 2400, "lr": 0.00987, "memory": 25203, "data_time": 0.07114, "decode.loss_seg": 1.11984, "decode.acc_seg": 60.37951, "aux.loss_seg": 0.4361, "aux.acc_seg": 61.67328, "loss": 1.55594, "time": 0.58522}
{"mode": "train", "epoch": 2, "iter": 2450, "lr": 0.00986, "memory": 25203, "data_time": 0.09748, "decode.loss_seg": 1.0307, "decode.acc_seg": 63.44903, "aux.loss_seg": 0.40697, "aux.acc_seg": 63.83471, "loss": 1.43767, "time": 0.68599}
{"mode": "train", "epoch": 2, "iter": 2500, "lr": 0.00986, "memory": 25203, "data_time": 0.01351, "decode.loss_seg": 1.15836, "decode.acc_seg": 57.99362, "aux.loss_seg": 0.45737, "aux.acc_seg": 58.97665, "loss": 1.61572, "time": 0.45142}
{"mode": "train", "epoch": 2, "iter": 2550, "lr": 0.00986, "memory": 25203, "data_time": 0.21576, "decode.loss_seg": 1.01448, "decode.acc_seg": 62.80232, "aux.loss_seg": 0.40746, "aux.acc_seg": 62.94977, "loss": 1.42194, "time": 0.85017}
{"mode": "train", "epoch": 2, "iter": 2600, "lr": 0.00986, "memory": 25203, "data_time": 0.11046, "decode.loss_seg": 0.99539, "decode.acc_seg": 63.75577, "aux.loss_seg": 0.39539, "aux.acc_seg": 64.50868, "loss": 1.39077, "time": 0.48878}
{"mode": "train", "epoch": 2, "iter": 2650, "lr": 0.00985, "memory": 25203, "data_time": 0.1178, "decode.loss_seg": 1.06313, "decode.acc_seg": 62.95054, "aux.loss_seg": 0.41356, "aux.acc_seg": 63.52769, "loss": 1.4767, "time": 0.58312}
{"mode": "train", "epoch": 2, "iter": 2700, "lr": 0.00985, "memory": 25203, "data_time": 0.05256, "decode.loss_seg": 1.0795, "decode.acc_seg": 63.60593, "aux.loss_seg": 0.42374, "aux.acc_seg": 64.31471, "loss": 1.50324, "time": 0.48926}
{"mode": "train", "epoch": 2, "iter": 2750, "lr": 0.00985, "memory": 25203, "data_time": 0.18416, "decode.loss_seg": 1.02577, "decode.acc_seg": 62.61299, "aux.loss_seg": 0.40031, "aux.acc_seg": 63.28041, "loss": 1.42608, "time": 0.68144}
{"mode": "train", "epoch": 2, "iter": 2800, "lr": 0.00984, "memory": 25203, "data_time": 0.05805, "decode.loss_seg": 0.96468, "decode.acc_seg": 65.32243, "aux.loss_seg": 0.38539, "aux.acc_seg": 65.64139, "loss": 1.35007, "time": 0.43674}
{"mode": "train", "epoch": 2, "iter": 2850, "lr": 0.00984, "memory": 25203, "data_time": 0.32442, "decode.loss_seg": 1.01917, "decode.acc_seg": 62.81029, "aux.loss_seg": 0.40208, "aux.acc_seg": 63.85319, "loss": 1.42125, "time": 0.85856}
{"mode": "train", "epoch": 2, "iter": 2900, "lr": 0.00984, "memory": 25203, "data_time": 0.07058, "decode.loss_seg": 1.036, "decode.acc_seg": 63.96142, "aux.loss_seg": 0.4074, "aux.acc_seg": 64.61518, "loss": 1.4434, "time": 0.50407}
{"mode": "train", "epoch": 2, "iter": 2950, "lr": 0.00984, "memory": 25203, "data_time": 0.15624, "decode.loss_seg": 1.07831, "decode.acc_seg": 61.87621, "aux.loss_seg": 0.43131, "aux.acc_seg": 62.01238, "loss": 1.50962, "time": 0.597}
{"mode": "train", "epoch": 3, "iter": 3000, "lr": 0.00983, "memory": 25203, "data_time": 0.02689, "decode.loss_seg": 1.15141, "decode.acc_seg": 61.48278, "aux.loss_seg": 0.45651, "aux.acc_seg": 61.89878, "loss": 1.60792, "time": 0.48231}
{"mode": "train", "epoch": 3, "iter": 3050, "lr": 0.00983, "memory": 25203, "data_time": 0.15339, "decode.loss_seg": 1.07091, "decode.acc_seg": 62.34053, "aux.loss_seg": 0.41992, "aux.acc_seg": 63.29482, "loss": 1.49083, "time": 0.62456}
{"mode": "train", "epoch": 3, "iter": 3100, "lr": 0.00983, "memory": 25203, "data_time": 0.05717, "decode.loss_seg": 1.1194, "decode.acc_seg": 63.30897, "aux.loss_seg": 0.43941, "aux.acc_seg": 63.83446, "loss": 1.55881, "time": 0.40906}
{"mode": "train", "epoch": 3, "iter": 3150, "lr": 0.00982, "memory": 25203, "data_time": 0.02773, "decode.loss_seg": 0.91514, "decode.acc_seg": 67.10118, "aux.loss_seg": 0.36117, "aux.acc_seg": 67.64898, "loss": 1.27631, "time": 0.39485}
{"mode": "train", "epoch": 3, "iter": 3200, "lr": 0.00982, "memory": 25203, "data_time": 0.2562, "decode.loss_seg": 0.99428, "decode.acc_seg": 65.3708, "aux.loss_seg": 0.39764, "aux.acc_seg": 65.4237, "loss": 1.39193, "time": 0.71889}
{"mode": "train", "epoch": 3, "iter": 3250, "lr": 0.00982, "memory": 25203, "data_time": 0.05903, "decode.loss_seg": 0.97493, "decode.acc_seg": 66.06394, "aux.loss_seg": 0.39114, "aux.acc_seg": 65.95097, "loss": 1.36607, "time": 0.55506}
{"mode": "train", "epoch": 3, "iter": 3300, "lr": 0.00982, "memory": 25203, "data_time": 0.0986, "decode.loss_seg": 1.04058, "decode.acc_seg": 64.96542, "aux.loss_seg": 0.41861, "aux.acc_seg": 64.91433, "loss": 1.45918, "time": 0.48133}
{"mode": "train", "epoch": 3, "iter": 3350, "lr": 0.00981, "memory": 25203, "data_time": 0.1368, "decode.loss_seg": 0.96013, "decode.acc_seg": 66.13824, "aux.loss_seg": 0.37592, "aux.acc_seg": 66.65919, "loss": 1.33605, "time": 0.69506}
{"mode": "train", "epoch": 3, "iter": 3400, "lr": 0.00981, "memory": 25203, "data_time": 0.05476, "decode.loss_seg": 1.02943, "decode.acc_seg": 64.28452, "aux.loss_seg": 0.40741, "aux.acc_seg": 64.64078, "loss": 1.43684, "time": 0.49044}
{"mode": "train", "epoch": 3, "iter": 3450, "lr": 0.00981, "memory": 25203, "data_time": 0.11972, "decode.loss_seg": 1.00012, "decode.acc_seg": 63.4779, "aux.loss_seg": 0.38956, "aux.acc_seg": 64.64862, "loss": 1.38968, "time": 0.5897}
{"mode": "train", "epoch": 3, "iter": 3500, "lr": 0.0098, "memory": 25203, "data_time": 0.22645, "decode.loss_seg": 1.076, "decode.acc_seg": 63.0198, "aux.loss_seg": 0.42408, "aux.acc_seg": 63.51551, "loss": 1.50009, "time": 0.71241}
{"mode": "train", "epoch": 3, "iter": 3550, "lr": 0.0098, "memory": 25203, "data_time": 0.02377, "decode.loss_seg": 1.0113, "decode.acc_seg": 64.70928, "aux.loss_seg": 0.40216, "aux.acc_seg": 65.09333, "loss": 1.41345, "time": 0.50763}
{"mode": "train", "epoch": 3, "iter": 3600, "lr": 0.0098, "memory": 25203, "data_time": 0.10264, "decode.loss_seg": 0.94626, "decode.acc_seg": 66.07023, "aux.loss_seg": 0.37315, "aux.acc_seg": 66.39095, "loss": 1.31941, "time": 0.63935}
{"mode": "train", "epoch": 3, "iter": 3650, "lr": 0.0098, "memory": 25203, "data_time": 0.03314, "decode.loss_seg": 0.96995, "decode.acc_seg": 66.76146, "aux.loss_seg": 0.38881, "aux.acc_seg": 66.23166, "loss": 1.35876, "time": 0.49043}
{"mode": "train", "epoch": 3, "iter": 3700, "lr": 0.00979, "memory": 25203, "data_time": 0.13028, "decode.loss_seg": 1.00948, "decode.acc_seg": 64.09111, "aux.loss_seg": 0.40286, "aux.acc_seg": 64.21045, "loss": 1.41233, "time": 0.56111}
{"mode": "train", "epoch": 3, "iter": 3750, "lr": 0.00979, "memory": 25203, "data_time": 0.11804, "decode.loss_seg": 1.02491, "decode.acc_seg": 63.35923, "aux.loss_seg": 0.40569, "aux.acc_seg": 63.75426, "loss": 1.43059, "time": 0.5807}
{"mode": "train", "epoch": 3, "iter": 3800, "lr": 0.00979, "memory": 25203, "data_time": 0.50079, "decode.loss_seg": 1.00959, "decode.acc_seg": 62.63999, "aux.loss_seg": 0.39963, "aux.acc_seg": 63.25163, "loss": 1.40922, "time": 1.18297}
{"mode": "train", "epoch": 3, "iter": 3850, "lr": 0.00979, "memory": 25203, "data_time": 0.01383, "decode.loss_seg": 0.92508, "decode.acc_seg": 69.12865, "aux.loss_seg": 0.36146, "aux.acc_seg": 69.86294, "loss": 1.28654, "time": 0.41183}
{"mode": "train", "epoch": 3, "iter": 3900, "lr": 0.00978, "memory": 25203, "data_time": 0.07939, "decode.loss_seg": 0.86126, "decode.acc_seg": 67.79901, "aux.loss_seg": 0.33904, "aux.acc_seg": 68.39479, "loss": 1.2003, "time": 0.43717}
{"mode": "train", "epoch": 3, "iter": 3950, "lr": 0.00978, "memory": 25203, "data_time": 0.19615, "decode.loss_seg": 0.95605, "decode.acc_seg": 65.1825, "aux.loss_seg": 0.37873, "aux.acc_seg": 65.34004, "loss": 1.33478, "time": 0.705}
{"mode": "train", "epoch": 3, "iter": 4000, "lr": 0.00978, "memory": 25203, "data_time": 0.04638, "decode.loss_seg": 0.91373, "decode.acc_seg": 65.47162, "aux.loss_seg": 0.3592, "aux.acc_seg": 66.46555, "loss": 1.27293, "time": 0.46961}
{"mode": "train", "epoch": 3, "iter": 4050, "lr": 0.00977, "memory": 25203, "data_time": 0.09132, "decode.loss_seg": 0.92489, "decode.acc_seg": 68.44482, "aux.loss_seg": 0.36094, "aux.acc_seg": 69.26951, "loss": 1.28584, "time": 0.56169}
{"mode": "train", "epoch": 3, "iter": 4100, "lr": 0.00977, "memory": 25203, "data_time": 0.16253, "decode.loss_seg": 1.02475, "decode.acc_seg": 61.63335, "aux.loss_seg": 0.40147, "aux.acc_seg": 62.55215, "loss": 1.42623, "time": 0.62256}
{"mode": "train", "epoch": 3, "iter": 4150, "lr": 0.00977, "memory": 25203, "data_time": 0.13508, "decode.loss_seg": 0.96355, "decode.acc_seg": 65.28094, "aux.loss_seg": 0.37578, "aux.acc_seg": 66.33196, "loss": 1.33933, "time": 0.52997}
{"mode": "train", "epoch": 3, "iter": 4200, "lr": 0.00977, "memory": 25203, "data_time": 0.22008, "decode.loss_seg": 1.00847, "decode.acc_seg": 64.33795, "aux.loss_seg": 0.39574, "aux.acc_seg": 65.04991, "loss": 1.40421, "time": 0.61562}
{"mode": "train", "epoch": 3, "iter": 4250, "lr": 0.00976, "memory": 25203, "data_time": 0.01753, "decode.loss_seg": 0.8721, "decode.acc_seg": 68.90262, "aux.loss_seg": 0.34725, "aux.acc_seg": 69.29704, "loss": 1.21935, "time": 0.43409}
{"mode": "train", "epoch": 3, "iter": 4300, "lr": 0.00976, "memory": 25203, "data_time": 0.04231, "decode.loss_seg": 0.85633, "decode.acc_seg": 68.75055, "aux.loss_seg": 0.33991, "aux.acc_seg": 68.95535, "loss": 1.19623, "time": 0.54828}
{"mode": "train", "epoch": 3, "iter": 4350, "lr": 0.00976, "memory": 25203, "data_time": 0.01126, "decode.loss_seg": 0.87915, "decode.acc_seg": 68.24323, "aux.loss_seg": 0.34822, "aux.acc_seg": 68.90815, "loss": 1.22737, "time": 0.52192}
{"mode": "train", "epoch": 3, "iter": 4400, "lr": 0.00975, "memory": 25203, "data_time": 0.05368, "decode.loss_seg": 1.00998, "decode.acc_seg": 64.51586, "aux.loss_seg": 0.39879, "aux.acc_seg": 65.36064, "loss": 1.40877, "time": 0.53493}
{"mode": "train", "epoch": 3, "iter": 4450, "lr": 0.00975, "memory": 25203, "data_time": 0.21752, "decode.loss_seg": 1.0702, "decode.acc_seg": 63.30501, "aux.loss_seg": 0.42101, "aux.acc_seg": 63.98192, "loss": 1.49121, "time": 0.70029}
{"mode": "train", "epoch": 4, "iter": 4500, "lr": 0.00975, "memory": 25203, "data_time": 0.02894, "decode.loss_seg": 0.96101, "decode.acc_seg": 67.22717, "aux.loss_seg": 0.39026, "aux.acc_seg": 67.47331, "loss": 1.35127, "time": 0.39276}
{"mode": "train", "epoch": 4, "iter": 4550, "lr": 0.00975, "memory": 25203, "data_time": 0.10813, "decode.loss_seg": 0.97564, "decode.acc_seg": 67.39255, "aux.loss_seg": 0.38703, "aux.acc_seg": 67.4853, "loss": 1.36267, "time": 0.65332}
{"mode": "train", "epoch": 4, "iter": 4600, "lr": 0.00974, "memory": 25203, "data_time": 0.08975, "decode.loss_seg": 0.88196, "decode.acc_seg": 67.15767, "aux.loss_seg": 0.35225, "aux.acc_seg": 67.67426, "loss": 1.23421, "time": 0.54694}
{"mode": "train", "epoch": 4, "iter": 4650, "lr": 0.00974, "memory": 25203, "data_time": 0.17664, "decode.loss_seg": 0.90004, "decode.acc_seg": 67.51962, "aux.loss_seg": 0.35719, "aux.acc_seg": 68.1606, "loss": 1.25723, "time": 0.59656}
{"mode": "train", "epoch": 4, "iter": 4700, "lr": 0.00974, "memory": 25203, "data_time": 0.28753, "decode.loss_seg": 1.00614, "decode.acc_seg": 66.48057, "aux.loss_seg": 0.39994, "aux.acc_seg": 66.98936, "loss": 1.40608, "time": 0.84715}
{"mode": "train", "epoch": 4, "iter": 4750, "lr": 0.00974, "memory": 25203, "data_time": 0.22378, "decode.loss_seg": 0.88839, "decode.acc_seg": 69.6589, "aux.loss_seg": 0.34944, "aux.acc_seg": 70.15404, "loss": 1.23783, "time": 0.65227}
{"mode": "train", "epoch": 4, "iter": 4800, "lr": 0.00973, "memory": 25203, "data_time": 0.0811, "decode.loss_seg": 0.96867, "decode.acc_seg": 64.64133, "aux.loss_seg": 0.382, "aux.acc_seg": 65.06959, "loss": 1.35067, "time": 0.44788}
{"mode": "train", "epoch": 4, "iter": 4850, "lr": 0.00973, "memory": 25203, "data_time": 0.12674, "decode.loss_seg": 0.93432, "decode.acc_seg": 68.02081, "aux.loss_seg": 0.36944, "aux.acc_seg": 68.23344, "loss": 1.30376, "time": 0.56228}
{"mode": "train", "epoch": 4, "iter": 4900, "lr": 0.00973, "memory": 25203, "data_time": 0.17992, "decode.loss_seg": 0.99287, "decode.acc_seg": 65.71806, "aux.loss_seg": 0.39049, "aux.acc_seg": 65.92806, "loss": 1.38336, "time": 0.80866}
{"mode": "train", "epoch": 4, "iter": 4950, "lr": 0.00972, "memory": 25203, "data_time": 0.03238, "decode.loss_seg": 0.88269, "decode.acc_seg": 68.46453, "aux.loss_seg": 0.34718, "aux.acc_seg": 68.93513, "loss": 1.22987, "time": 0.46547}
{"mode": "train", "epoch": 4, "iter": 5000, "lr": 0.00972, "memory": 25203, "data_time": 0.03222, "decode.loss_seg": 0.88855, "decode.acc_seg": 69.32376, "aux.loss_seg": 0.35156, "aux.acc_seg": 69.794, "loss": 1.24011, "time": 0.48808}
{"mode": "train", "epoch": 4, "iter": 5050, "lr": 0.00972, "memory": 25203, "data_time": 0.20003, "decode.loss_seg": 0.98944, "decode.acc_seg": 66.02122, "aux.loss_seg": 0.38678, "aux.acc_seg": 67.10854, "loss": 1.37622, "time": 0.66149}
{"mode": "train", "epoch": 4, "iter": 5100, "lr": 0.00972, "memory": 25203, "data_time": 0.18629, "decode.loss_seg": 1.05164, "decode.acc_seg": 64.78285, "aux.loss_seg": 0.41091, "aux.acc_seg": 64.99806, "loss": 1.46255, "time": 0.61228}
{"mode": "train", "epoch": 4, "iter": 5150, "lr": 0.00971, "memory": 25203, "data_time": 0.10844, "decode.loss_seg": 0.91633, "decode.acc_seg": 67.7008, "aux.loss_seg": 0.36297, "aux.acc_seg": 67.43089, "loss": 1.2793, "time": 0.54672}
{"mode": "train", "epoch": 4, "iter": 5200, "lr": 0.00971, "memory": 25203, "data_time": 0.17657, "decode.loss_seg": 0.93904, "decode.acc_seg": 68.45224, "aux.loss_seg": 0.37251, "aux.acc_seg": 68.79575, "loss": 1.31155, "time": 0.70898}
{"mode": "train", "epoch": 4, "iter": 5250, "lr": 0.00971, "memory": 25203, "data_time": 0.02257, "decode.loss_seg": 0.79272, "decode.acc_seg": 72.47382, "aux.loss_seg": 0.31561, "aux.acc_seg": 72.73387, "loss": 1.10832, "time": 0.39064}
{"mode": "train", "epoch": 4, "iter": 5300, "lr": 0.0097, "memory": 25203, "data_time": 0.13684, "decode.loss_seg": 0.92693, "decode.acc_seg": 68.61351, "aux.loss_seg": 0.36259, "aux.acc_seg": 69.17998, "loss": 1.28952, "time": 0.60925}
{"mode": "train", "epoch": 4, "iter": 5350, "lr": 0.0097, "memory": 25203, "data_time": 0.17493, "decode.loss_seg": 0.97674, "decode.acc_seg": 67.01377, "aux.loss_seg": 0.37911, "aux.acc_seg": 67.52827, "loss": 1.35586, "time": 0.63205}
{"mode": "train", "epoch": 4, "iter": 5400, "lr": 0.0097, "memory": 25203, "data_time": 0.03958, "decode.loss_seg": 0.89147, "decode.acc_seg": 69.55374, "aux.loss_seg": 0.34978, "aux.acc_seg": 69.74409, "loss": 1.24126, "time": 0.54639}
{"mode": "train", "epoch": 4, "iter": 5450, "lr": 0.0097, "memory": 25203, "data_time": 0.20243, "decode.loss_seg": 0.8557, "decode.acc_seg": 69.70264, "aux.loss_seg": 0.33462, "aux.acc_seg": 70.47739, "loss": 1.19032, "time": 0.64739}
{"mode": "train", "epoch": 4, "iter": 5500, "lr": 0.00969, "memory": 25203, "data_time": 0.02547, "decode.loss_seg": 0.80473, "decode.acc_seg": 70.72132, "aux.loss_seg": 0.31928, "aux.acc_seg": 71.36454, "loss": 1.12401, "time": 0.51056}
{"mode": "train", "epoch": 4, "iter": 5550, "lr": 0.00969, "memory": 25203, "data_time": 0.27563, "decode.loss_seg": 0.85628, "decode.acc_seg": 69.23813, "aux.loss_seg": 0.34009, "aux.acc_seg": 69.7131, "loss": 1.19637, "time": 0.8411}
{"mode": "train", "epoch": 4, "iter": 5600, "lr": 0.00969, "memory": 25203, "data_time": 0.06604, "decode.loss_seg": 0.78418, "decode.acc_seg": 71.15552, "aux.loss_seg": 0.30835, "aux.acc_seg": 71.29495, "loss": 1.09253, "time": 0.43806}
{"mode": "train", "epoch": 4, "iter": 5650, "lr": 0.00968, "memory": 25203, "data_time": 0.15322, "decode.loss_seg": 0.92998, "decode.acc_seg": 68.1069, "aux.loss_seg": 0.3678, "aux.acc_seg": 68.37218, "loss": 1.29778, "time": 0.68337}
{"mode": "train", "epoch": 4, "iter": 5700, "lr": 0.00968, "memory": 25203, "data_time": 0.15627, "decode.loss_seg": 0.87565, "decode.acc_seg": 68.79203, "aux.loss_seg": 0.34693, "aux.acc_seg": 69.36142, "loss": 1.22258, "time": 0.63258}
{"mode": "train", "epoch": 4, "iter": 5750, "lr": 0.00968, "memory": 25203, "data_time": 0.15951, "decode.loss_seg": 0.87172, "decode.acc_seg": 68.20969, "aux.loss_seg": 0.34686, "aux.acc_seg": 68.53598, "loss": 1.21858, "time": 0.60489}
{"mode": "train", "epoch": 4, "iter": 5800, "lr": 0.00968, "memory": 25203, "data_time": 0.29373, "decode.loss_seg": 0.86192, "decode.acc_seg": 68.06684, "aux.loss_seg": 0.34399, "aux.acc_seg": 68.33404, "loss": 1.20591, "time": 0.75924}
{"mode": "train", "epoch": 4, "iter": 5850, "lr": 0.00967, "memory": 25203, "data_time": 0.0535, "decode.loss_seg": 0.8912, "decode.acc_seg": 69.69692, "aux.loss_seg": 0.3461, "aux.acc_seg": 69.70618, "loss": 1.2373, "time": 0.58631}
